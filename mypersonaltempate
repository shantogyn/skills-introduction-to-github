//cp my personal template
#include <bits/stdc++.h>
using namespace std;


//==========slo============//

#define slo cin.tie(nullptr)->sync_with_stdio(false)

//================type=======//
#define int long long
#define inputintpair(v, n) for(auto i = 0; i < n; ++i) { auto x, y; cin >> x >> y; v[i] = {x, y}; }


//============intput================//
template<typename T>
void inputarr(vector<T>& a) {
    for (auto &x : a) cin >> x;
}


//=============output=============//

template<typename T>
void outputarr(const vector<T>& a) {
    for (auto &x : a) cout << x << ' ';
    cout << "\n";
}


//=========Macros=================//
#define point(x) fixed << setprecision(x)
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define nx '\n'
#define coutt(x)  cout<<x<<nx;
#define yno(x) if(x){coutt("Yes");}else {coutt("No");}
#define noy(x) if(x){coutt("No");}else {coutt("Yes");}
#define setbitcount(c)  __builtin_popcount(a);
#define pb push_back
#define ff first
#define ss second
#define yes coutt("Yes");
#define no coutt("No");

//================ Math Utils ================//
int gcd(int a, int b) {
    return b ? gcd(b, a % b) : a;
}

int lcm(int a, int b) {
    return (a / gcd(a, b)) * b;
}

int power(int a, int b, int mod) {
    int res = 1;
    a %= mod;
    while (b > 0) {
        if (b & 1) res = res * a % mod;
        a = a * a % mod;
        b >>= 1;
    }
    return res;
}
const int N = 1e6 + 5;
vector<bool> isPrime(N, true);

void sieve() {
    isPrime[0] = isPrime[1] = false;
    for (int i = 2; i * i < N; ++i) {
        if (isPrime[i]) {
            for (int j = i * i; j < N; j += i)
                isPrime[j] = false;
        }
    }
}



//=========main code========//


void slove() {

}


int32_t main() {
    slo;
    int testcase = 1;
    cin >> testcase;
    int n=1;
    while (testcase-->0) {
        //cout<<"Case "<<n++<<": ";
        slove();
    }
    return 0;
}
